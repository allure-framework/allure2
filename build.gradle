buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.4'
    }
}

ext {
    linkHomepage = 'https://qameta.io/allure'
    linkCi = 'https://ci.qameta.in/job/allure-server_deploy/'
    linkScmUrl = 'https://github.com/qameta/allure-server'
    linkScmConnection = 'scm:git:git://github.com/qameta/allure-server.git'
    linkScmDevConnection = 'scm:git:ssh://git@github.com:qameta/allure-server.git'
    gradleScriptDir = "${rootProject.projectDir}/gradle"
}

apply from: "${gradleScriptDir}/bintray.gradle"

configure(rootProject) {
    description = "Allure Report"

    task wrapper(type: Wrapper) {
        gradleVersion = '3.3'
    }
}

allprojects {
    group = project.name.endsWith('plugin') ? 'io.qameta.allure.plugins' : 'io.qameta.allure'
    version = version

    configurations {
        allurePlugin
    }

    tasks.withType(Tar){
        compression = Compression.GZIP
    }

    repositories {
        jcenter()
    }
}

subprojects { project ->
    ext {
        aspectjVersion = '1.8.9'
        jaxb2BasicsVersion = '0.9.5'
        slf4jVersion = '1.7.12'
    }

    apply plugin: 'java'
    compileJava.dependsOn(processResources)

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }

    configurations {
        allurePlugin
    }

    task copyPlugins(type: Sync) {
        dependsOn configurations.allurePlugin
        from {
            configurations.allurePlugin.collect { zipTree(it) }
        }
        into "$buildDir/plugins/"
    }
}
