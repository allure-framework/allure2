buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.4'
    }
}

ext {
    linkHomepage = 'https://qameta.io/allure'
    linkCi = 'https://ci.qameta.in/job/allure-server_deploy/'
    linkScmUrl = 'https://github.com/qameta/allure-server'
    linkScmConnection = 'scm:git:git://github.com/qameta/allure-server.git'
    linkScmDevConnection = 'scm:git:ssh://git@github.com:qameta/allure-server.git'
}

configure(rootProject) {
    description = "Allure Report"

    task wrapper(type: Wrapper) {
        gradleVersion = '3.3'
    }
}

subprojects { project ->
    group = 'io.qameta.allure'
    version = version

    ext.aspectjVersion = '1.8.9'
    ext.jaxb2BasicsVersion = '0.9.5'
    ext.slf4jVersion = '1.7.12'

    apply plugin: 'java'
    apply plugin: 'com.github.jacobono.jaxb'

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    compileJava.dependsOn(processResources)

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }

    def generatedSources = 'build/generated-sources/xjc'
    jaxb {
        xjc {
            destinationDir = generatedSources
            taskClassname = 'org.jvnet.jaxb2_commons.xjc.XJC2Task'
            args = ['-enableIntrospection',
                    '-no-header',
                    '-Xxew',
                    '-Xxew:instantiate lazy',
                    '-Xfluent-api',
                    '-Xinheritance']
        }
    }

    dependencies {
        jaxb('org.jvnet.jaxb2_commons:jaxb2-basics-ant:1.11.1')
        jaxb("org.jvnet.jaxb2_commons:jaxb2-basics:${jaxb2BasicsVersion}")
        jaxb('com.github.jaxb-xew-plugin:jaxb-xew-plugin:1.5')
        jaxb('net.java.dev.jaxb2-commons:jaxb-fluent-api:2.1.8')
        jaxb('org.slf4j:slf4j-simple:1.7.21')
    }

    tasks.withType(Tar){
        compression = Compression.GZIP
    }

    configurations {
        allurePlugin
    }

    task copyPlugins(type: Sync) {
        dependsOn configurations.allurePlugin
        from {
            configurations.allurePlugin.collect { zipTree(it) }
        }
        into "$buildDir/plugins/"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
}
