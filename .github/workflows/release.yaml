name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8.0.x
      - run: echo "::set-output name=version::${GITHUB_REF:10}"
        id: release
      - name: "Gradle Build"
        run: ./gradlew build buildRpm buildDeb -Pversion=${{ steps.release.outputs.version }}
      - name: "Gradle Publish to Bintray"
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
        run: ./gradlew bintrayUpload -Pversion=${{ steps.release.outputs.version }}
      - name: "Publish Deb to GitHub"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./allure-commandline/build/distributions/allure_${{ steps.release.outputs.version }}-1_all.deb
          asset_name: allure_${{ steps.release.outputs.version }}-1_all.deb
          asset_content_type: application/octet-stream
      - name: "Publish Rpm to GitHub"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./allure-commandline/build/distributions/allure-${{ steps.release.outputs.version }}-1.noarch.rpm
          asset_name: allure_${{ steps.release.outputs.version }}-1.noarch.rpm
          asset_content_type: application/octet-stream
      - name: "Publish Zip to GitHub"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./allure-commandline/build/distributions/allure-commandline-${{ steps.release.outputs.version }}.zip
          asset_name: allure-${{ steps.release.outputs.version }}.zip
          asset_content_type: application/octet-stream
      - name: "Publish Tgz to GitHub"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./allure-commandline/build/distributions/allure-commandline-${{ steps.release.outputs.version }}.tgz
          asset_name: allure-${{ steps.release.outputs.version }}.tgz
          asset_content_type: application/octet-stream
