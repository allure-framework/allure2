description = 'Allure Commandline'

apply plugin: 'application'
apply from: "${gradleScriptDir}/bintray.gradle"

applicationName = 'allure'
mainClassName = 'io.qameta.allure.CommandLine'

startScripts {
    classpath += files('src/lib/config')
    doLast {
        unixScript.text = unixScript.text
                .replaceAll('(?m)^APP_HOME=', 'export APP_HOME=')
                .replaceAll('\\"\\$\\(uname\\)\\"\\s*=\\s*\\"Darwin\\"', '""')
    }
}

applicationDistribution.from(copyPlugins) {
    into 'plugins'
}

build.dependsOn installDist

dependencies {
    allurePlugin project(path: ':behaviors-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':junit-xml-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':xunit-xml-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':trx-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':xctest-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':packages-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':custom-logo-plugin', configuration: 'allurePlugin')
    allurePlugin project(path: ':screen-diff-plugin', configuration: 'allurePlugin')

    compile project(':allure-generator')
    compile('com.beust:jcommander')

    compile('org.eclipse.jetty:jetty-server')
    compile('org.slf4j:slf4j-log4j12')
    compileOnly('org.projectlombok:lombok')

    testCompile('junit:junit')
    testCompile('org.assertj:assertj-core')
    testCompile('org.mockito:mockito-core')
    testCompile('org.apache.commons:commons-text')
}

configurations.archives.artifacts.removeAll { it.archiveTask.is jar }

apply plugin: "nebula.ospackage"

task cliDeb(type: Deb) {
    dependsOn = ['build']
    packageName = 'allure'
    version = project.version
    packager = 'Allure team'
    maintainer = 'Allure team'

    from('build/install/allure') {
        into 'usr/share/allure'
    }
    link('/usr/bin/allure', '/usr/share/allure/bin/allure')
}

bintray {
    pkg {
        websiteUrl = 'https://bintray.com/qameta/debian'
        repo = 'debian'
    }
}
