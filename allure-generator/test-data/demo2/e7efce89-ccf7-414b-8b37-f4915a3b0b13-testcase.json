{
    "status": "failed", 
    "name": "test_parametrization_with_many_decorators_with_partial_ids_and_unsorted_args[param3_id3-param2_id2-False]", 
    "parameters": [
        {
            "name": "param3_id3", 
            "value": "False"
        }, 
        {
            "name": "param1", 
            "value": "False"
        }, 
        {
            "name": "param2_id2", 
            "value": "False"
        }
    ], 
    "parentIds": [], 
    "labels": [
        {
            "name": "testClass", 
            "value": "test.parametrization.parametrization_deep_test"
        }
    ], 
    "stop": 1482258280458, 
    "statusDetails": {
        "message": "AssertionError: assert ((False) or False)", 
        "trace": "param3 = False, param1 = False, param2 = False\n\n    @pytest.mark.parametrize('param1', [True, False],)\n    @pytest.mark.parametrize('param2', [True, False], ids=['param2_id1', 'param2_id2'])\n    @pytest.mark.parametrize('param3', [True, True, False], ids=['param3_id1', 'param3_id2', 'param3_id3'])\n    def test_parametrization_with_many_decorators_with_partial_ids_and_unsorted_args(param3, param1, param2):\n>       assert param1 and param2 or param3\nE       assert ((False) or False)\n\ntest/parametrization/parametrization_deep_test.py:121: AssertionError"
    }, 
    "start": 1482258280458, 
    "steps": [], 
    "fullName": "test.parametrization.parametrization_deep_test#test_parametrization_with_many_decorators_with_partial_ids_and_unsorted_args[param3_id3-param2_id2-False]", 
    "afters": [], 
    "id": "abe9c69ec8d733757a02d6cc3869391a", 
    "befores": []
}